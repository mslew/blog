---
import { getCollection } from "astro:content";
import MainLayout from "../layouts/MainLayout.astro";
import DisplayPosts from "../components/DisplayPosts.astro";
const posts = await getCollection('posts');

export async function getStaticPaths() {
    const posts = await getCollection('posts');
    const postsPerPage = 5;
    const numberOfPages = Math.ceil(posts.length / postsPerPage);
    const paths = Array.from({ length: numberOfPages }).map((_, i) => ({
        params: { page: (i + 1).toString() },
        props: { postsPerPage: postsPerPage, page: i + 1, numberOfPages: numberOfPages },
    }));
    return paths;
}

export const prerender = true

const tags = posts.reduce<Record<string, typeof posts>>((allTags, post) => {
    const postTags = post.data.tags;
    if (postTags) {
        postTags.forEach((tag) => {
            if (!allTags[tag]){
                allTags[tag] = [];
            }
            allTags[tag].push(post);
        });
    }
    return allTags;
}, {});

let sortedPosts = posts ? posts.sort(
    (a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
) : [];

const { page, postsPerPage, numberOfPages } = Astro.props;

const prevPage = page - 1 > 0 ? page - 1 : null;
const nextPage = page + 1 <= numberOfPages ? page + 1 : null;
const prevDisabled = prevPage ? "pointer-events-auto text-slate-300" : "pointer-events-none text-slate-500 border-slate-500";
const nextDisabled = nextPage ? "pointer-events-auto text-slate-300" : "pointer-events-none text-slate-500 border-slate-500";
---

<MainLayout title={`Blogs Page ${page}`}>
    <DisplayPosts posts={sortedPosts.slice((page-1) * postsPerPage, page * postsPerPage)} tags={tags} />
    <div class="flex flex-row items-center justify-center gap-4 text-xl pt-12">
        <a href={`/${1}`} class="border p-2 pr-4 pl-4 rounded-xl text-sm hover:bg-slate-500">&#60;&#60; First</a>
        <a href={`/${prevPage}`} class={`border p-2 pr-4 pl-4 rounded-xl text-sm hover:bg-slate-500 ${prevDisabled}`} href={`/${prevPage}`}>&#60; Prev</a>
        {Array.from({length: numberOfPages}).map((_, i) => (
            <a href={`/${i + 1}`} class="text-slate-300 p-2 rounded-xl hover:bg-slate-500">{i + 1}</a>
        ))}
        <a href={`/${nextPage}`} class={`border p-2 pr-4 pl-4  rounded-xl text-sm hover:bg-slate-500 ${nextDisabled}`}>Next &#62;</a>
        <a href={`/${numberOfPages}`} class="border p-2 pr-4 pl-4 rounded-xl text-sm hover:bg-slate-500">Last &#62;&#62;</a>
    </div>
</MainLayout>