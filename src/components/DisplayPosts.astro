---
import type { CollectionEntry } from 'astro:content';
import PostCard from '../components/PostCard.astro';
import TagsDisplay from './TagsDisplay.astro';
interface Props{
    posts: CollectionEntry<'posts'>[]
    tags: Record<string, CollectionEntry<'posts'>[]> | string
}

let { posts, tags } = Astro.props;

type PostsByYear = Record<string, CollectionEntry<'posts'>[]>;

const postsByYear = posts.reduce((acc: PostsByYear, post) => {
  const year = new Date(post.data.pubDate).getFullYear();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {});

const sortedPostsByYear = Object.keys(postsByYear).sort((a, b) => parseInt(b) - parseInt(a));
---

<TagsDisplay tags={tags} />
<div class="2xl:w-2/3 -2xl:w-3/4 -lg:w-[95%] place-self-center items-center">
  {Object.keys(sortedPostsByYear).length > 0 &&
      sortedPostsByYear.map((year) => (
        <div class="flex flex-col gap-4 items-center w-full h-full pb-4">
          <h2 class="text-3xl text-left w-2/3 -xl:w-3/4 -sm:w-[95%]">{year}</h2>
          {postsByYear[year].map((post) => (
              <PostCard {...post.data} body={post.body} />
          ))}
        </div>
  ))}
</div>