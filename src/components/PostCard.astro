---
import readingTime from "reading-time";
import dateFormat from "dateformat";

const { slug, title, description, tags, pubDate, image: { url, alt } } = Astro.props;

const { body } = Astro.props;

function getMinutes(body: string){
    interface minute {
        time: number
        minute: string
    }
    const minutes = Math.round(readingTime(body).minutes)
    let min:minute = {time: 0, minute: 'minutes'}
    if (minutes === 1){
        min = {time: minutes, minute: 'minute'}
        return min
    }
    if (minutes > 1 || minutes === 0){
        min = {time: minutes, minute: 'minutes'}
        return min
    }
    return min
}
---

<a class="text-slate-300 h-max col-span-4 md:col-span-2 2xl:col-span-1" href={`/post/${slug}`} transition:name="blog">
    <div class="shadow-lg transfrom hover:-translate-y-2 delay-100 duration-300">
        <img transition:name="blog-image" src={url} alt={alt}/>
        <div class="flex flex-col bg-slate-800 text-center p-4">
            <p transition:name="blog-title" class="text-3xl mb-1">{title}</p>
            <p transition:name="blog-description" class="mb-3">{description}</p>
            <p transition:name="blog-date">{dateFormat(pubDate, "UTC:mmmm dS, yyyy")}</p>
            <p>{getMinutes(body).time} Â· {getMinutes(body).minute}</p>
            <p class="">{tags.map((tag: string) => tag).join(' ')}</p>
        </div>
    </div>
</a>